version: '3.8'

services:
  # MongoDB Database Service
  mongodb:
    image: mongo:7.0
    container_name: campus-events-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=campus_events_admin_password
      - MONGO_INITDB_DATABASE=campus_events
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - campus-events-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: campus-events-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - JWT_SECRET=your_jwt_secret_here_change_in_production
      - MONGODB_URI=mongodb://admin:campus_events_admin_password@mongodb:27017/campus_events?authSource=admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - campus-events-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: campus-events-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_WS_URL=
    networks:
      - campus-events-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  campus-events-network:
    driver: bridge
